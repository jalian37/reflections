When you initialize a repository, the content of current directory can be managed by git. 
Hidden folder .git is created, where all commits and changes are stored. But the commit history is empty
until you commit the files.
List of chnaged files, or yet not commited can be viewed using git status command

staging area defines what files should be included in a commit. it must not contain all files in a working directory. i can remove files from staging area, but not from a repository, I think.

using staging area, i can define, what files were changed to make the logical change that i wan to commit. i can either 
add all changed files compared to previous version, or manually select the ones that are relevant and add them to 
staging area

branches are useful when you need to keep multiple versions of a file like language versions, exerimental features or 
new features and fixing bugs

visualising branches helps one understand the relationships of different branches and commits (or versions) 


when merging two branches together, new commit is created that has two parents, so none of the previous versions within 
the branches dissappear. 

